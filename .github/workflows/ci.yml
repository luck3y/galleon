# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Galleon CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build-all:
    name: Compile (no tests) with JDK 11
    runs-on: ubuntu-latest
    steps:
    - uses: n1hility/cancel-previous-runs@v2
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            m2-
    - uses: actions/checkout@v2
    - name: Set up JDK11
      uses: AdoptOpenJDK/install-jdk@v1
      with:
        version: 11
        impl: hotspot
    - name: Build
      run: mvn -U -B -fae -DskipTests -Dlicense.failIfMissing=false -Dlicense.failIfUnknown=false clean install
    - name: Tar Maven Repo
      shell: bash
      run: tar -czf maven-repo.tgz -C ~ .m2/repository
    - name: Persist Maven Repo
      uses: actions/upload-artifact@v1
      with:
        name: maven-repo
        path: maven-repo.tgz
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: surefire-reports-build
        path: '**/surefire-reports/*'
  test-matrix:
    name: ${{ matrix.module }}-jdk${{ matrix.jdk }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build-all
    strategy:
      fail-fast: false
      matrix:
        module: [core, cli, maven-universe, testsuite]
        os: [ubuntu-20.04, windows-latest]
        jdk: [11]
    steps:
    - uses: n1hility/cancel-previous-runs@v2
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: AdoptOpenJDK/install-jdk@v1
      with:
        version: ${{ matrix.jdk }}
        impl: hotspot
    - name: Download Maven Repo
      uses: actions/download-artifact@v1
      with:
        name: maven-repo
        path: .
    - name: Extract Maven Repo
      shell: bash
      run: tar -xzf maven-repo.tgz -C ~
    - name: Run Tests
      run: mvn -U -B -fae test '-DfailIfNotTests=true' '-Dlicense.failIfMissing=false' '-Dlicense.failIfUnknown=false' -pl ${{ matrix.module }}
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: surefire-reports-${{ matrix.module }}-JDK${{ matrix.jdk }}-${{ matrix.os }}
        path: '**/surefire-reports/*'